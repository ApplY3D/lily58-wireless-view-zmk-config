/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keys_ru.h"

// https://github.com/urob/zmk/blob/main/docs/docs/behaviors/mouse-emulation.md
#include <dt-bindings/zmk/mouse.h> 

#define BASE    0
// #define RU      1
#define LOW     1
#define RAISE   2
#define BT      3

&mmv {
    time-to-max-speed-ms = <300>;
};

&msc {
    acceleration-exponent = <2>;
};

&mt {
    flavor = "tap-preferred";
};

#define MOD_MORPH_SFT_MASKED(NAME, KEY, MOD_KEY) \
  mm_sft__##NAME: mm_sft__##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
    masked_mods = <(MOD_LSFT|MOD_RSFT)>; \
  };

#define MOD_MORPH_SFT(NAME, KEY, MOD_KEY) \
  mm_sft__##NAME: mm_sft__##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
  };

#define MOD_MORPH_CTRL_MASKED(NAME, KEY, MOD_KEY) \
  mm_ctrl__##NAME: mm_ctrl__##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LCTL|MOD_RCTL)>; \
    masked_mods = <(MOD_LCTL|MOD_RCTL)>; \
  };

#define MOD_MORPH_CTRL(NAME, KEY, MOD_KEY) \
  mm_ctrl__##NAME: mm_ctrl__##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LCTL|MOD_RCTL)>; \
  };

/ {
    behaviors {
      MOD_MORPH_CTRL(bspc_del, BSPC, DEL)
      MOD_MORPH_SFT(ru_semi_colon, RU_SEMI, RU_COLON)
    };
};

#define MT_RU_A_YA &mt RU_CHAR_YA RU_CHAR_A
#define MT_RU_SH_SCH &mt RU_CHAR_SHCHA RU_CHAR_SHA
#define MT_RU_U_YU &mt RU_CHAR_YU RU_CHAR_U
#define MT_RU_SOFT_HARD &mt RU_CHAR_HARD_SIGN RU_CHAR_SOFT_SIGN
#define MT_RU_O_IO &mt RU_CHAR_IO RU_CHAR_O
#define MT_RU_I_II &mt RU_CHAR_SHORT_I RU_CHAR_I
#define MT_RU_IE_AE &mt RU_CHAR_E RU_CHAR_IE
#define MT_RU_CHE_HA &mt RU_CHAR_HA RU_CHAR_CHE

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |        |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |BSPC_DEL|
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '    |
// | CTRL  |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   |  CTRL  |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| SHIFT | GUI   |
            label = "Base";
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                      &kp N6  &kp N7  &kp N8    &kp N9  &kp N0   &trans
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                       &kp Y   &kp U   &kp I     &kp O   &kp P    &mm_ctrl__bspc_del
&kp LSHFT &kp A  &kp S  &kp D    &kp F    &kp G                       &kp H   &kp J   &kp K     &kp L   &kp SEMI &kp SQT
&kp LCTRL &kp Z  &kp X  &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT  &kp N   &kp M   &kp COMMA &kp DOT &kp FSLH &kp RCTRL
                        &kp LALT &kp LGUI &mo LOW &kp SPACE  &kp RET  &mo RAISE  &kp RSHFT &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

//        ru {
// // ------------------------------------------------------------------------------------------------------------
// // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |        |
// // |  TAB  |  Й  | Ш,Щ |  Ф   |  П   |  Г   |                   |  Ж   |  Л    |  У,Ю  |  Ы   |   ;   |BSPC_DEL|
// // | SHIFT | А,Я |  Р  |  С   |  Т   |  Д   |                   |  Ч   |  Н    |  Е,Э  |  И,Й |  О,Ё  |  Ь,Ъ   |
// // | CTRL  |  З  |  Х  |  Ц   |  В   |  Б   |   "["  |  |  "]"  |  К   |  М    |  ,    |  .   |   /   |  CTRL  |
// //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| SHIFT | GUI   |
//             label = "Ru";
//             bindings = <
// &kp ESC   &kp N1               &kp N2           &kp N3           &kp N4           &kp N5                               &kp N6           &kp N7          &kp N8        &kp N9             &kp N0                  &trans
// &kp TAB   &kp RU_CHAR_SHORT_I  MT_RU_SH_SCH     &kp RU_CHAR_EF   &kp RU_CHAR_PE   &kp RU_CHAR_GE                       &kp RU_CHAR_ZHE  &kp RU_CHAR_EL  MT_RU_U_YU    &kp RU_CHAR_YERU   &mm_sft__ru_semi_colon  &mm_ctrl__bspc_del
// &kp LSHFT MT_RU_A_YA           &kp RU_CHAR_ER   &kp RU_CHAR_ES   &kp RU_CHAR_TE   &kp RU_CHAR_DE                       &kp RU_CHAR_CHE  &kp RU_CHAR_EN  MT_RU_IE_AE   MT_RU_I_II         MT_RU_O_IO              MT_RU_SOFT_HARD
// &kp LCTRL &kp RU_CHAR_ZE       &kp RU_CHAR_HA   &kp RU_CHAR_CHE  &kp RU_CHAR_VE   &kp RU_CHAR_BE  &kp LBKT   &kp RBKT  &kp RU_CHAR_KA   &kp RU_CHAR_EM  &kp RU_COMMA  &kp RU_DOT         &kp RU_FSLH             &kp RCTRL
//                                                 &kp LALT         &kp LGUI         &mo LOW         &kp SPACE  &kp RET   &mo RAISE        &kp RSHFT       &kp RGUI
//             >;
// 
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
//         };

//         ru {
// // ------------------------------------------------------------------------------------------------------------
// // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |        |
// // |  TAB  |  Й  |  Ц  |  У,Ю |  К   |  Е,Э |                   |  Н   |  Г    |  Ш    |  Щ   |   З   |BSPC_DEL|
// // | SHIFT |  Ф  |  Ы  |  В   |  А   |  П   |                   |  Р   |  О    |  Л    |  Д   |   Ж   |   ?    |
// // | CTRL  |  Я  | Ч,Х |  С   |  М   |  И   |   "["  |  |  "]"  |  Т   |  Ь,Ъ  |  Б    |  ,   |   .   |  CTRL  |
// //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| SHIFT | GUI   |
//             label = "Ru";
//             bindings = <
// &kp ESC   &kp N1               &kp N2            &kp N3           &kp N4           &kp N5                               &kp N6          &kp N7           &kp N8           &kp N9             &kp N0           &trans
// &kp TAB   &kp RU_CHAR_SHORT_I  &kp RU_CHAR_TSE   MT_RU_U_YU       &kp RU_CHAR_KA   MT_RU_IE_AE                          &kp RU_CHAR_EN  &kp RU_CHAR_GE   &kp RU_CHAR_SHA  &kp RU_CHAR_SHCHA  &kp RU_CHAR_ZE   &mm_ctrl__bspc_del
// &kp LSHFT &kp RU_CHAR_EF       &kp RU_CHAR_YERU  &kp RU_CHAR_VE   &kp RU_CHAR_A    &kp RU_CHAR_PE                       &kp RU_CHAR_ER  &kp RU_CHAR_O    &kp RU_CHAR_EL   &kp RU_CHAR_DE     &kp RU_CHAR_ZHE  &kp RU_DQT
// &kp LCTRL &kp RU_CHAR_YA       MT_RU_CHE_HA      &kp RU_CHAR_ES   &kp RU_CHAR_EM   &kp RU_CHAR_I   &kp LBKT   &kp RBKT  &kp RU_CHAR_TE  MT_RU_SOFT_HARD  &kp RU_CHAR_BE   &kp RU_COMMA       &kp RU_DOT       &kp RCTRL
//                                                  &kp LALT         &kp LGUI         &mo LOW         &kp SPACE  &kp RET   &mo RAISE       &kp RSHFT        &kp RGUI
//             >;

//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
//         };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  F1  | F2   | F3  |  F4  | F5   |                   |   F8  |  F9   |  F10  |  F11 |  F12  |       |
// |       |      |      |↑SCRL|      |      |                   |       |  LCLK |   ↑M  | RCLK |       |       |
// |       |      |<-SCRL|↓SCRL|SCRL->|      |                   |       |   <-M |   ↓M  | M->  |       |       |
// |       |      |      |     |      |      |  F6    |  |  F7   |       |       |  MCLK |      |       |       |
//                       |     |      |      |        |  |       |       |       |       |
            label = "Lower";
            bindings = <
&trans  &kp F1 &kp F2           &kp F3           &kp F4            &kp F5                       &kp F8     &kp F9         &kp F10        &kp F11         &kp F12      &trans
&trans  &trans &trans           &msc SCRL_UP     &trans            &trans                       &trans     &mkp LCLK      &mmv MOVE_UP   &mkp RCLK       &trans       &trans
&trans  &trans &msc SCRL_LEFT   &msc SCRL_DOWN   &msc SCRL_RIGHT   &trans                       &trans     &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans       &trans
&trans  &trans &trans           &trans           &trans            &trans    &kp F6   &kp F7    &trans     &trans         &mkp MCLK      &trans          &trans       &trans
                                &trans           &trans            &trans    &trans   &trans    &trans     &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       | TOG_BT|
// |       |     |     |      |      |      |                   |      |       |   ↑   |      |       |       |
// |       |     |     |      |      |      |                   |      |    <- |   ↓   |  ->  |       |   `   |
// |       |     |     |      |      |      |        |  |       |      |   =   |   -   |  +   |   \   |       |
//                     |      |      |      |        |  |       |      |       |       |
            label = "Raise";
            bindings = <
&trans    &trans         &trans         &trans       &trans          &trans                    &trans    &trans    &trans    &trans      &trans   &tog BT
&trans    &trans         &trans         &trans       &trans          &trans                    &trans    &trans    &kp UP    &trans      &trans   &trans
&trans    &trans         &trans         &trans       &trans          &trans                    &trans    &kp LEFT  &kp DOWN  &kp RIGHT   &trans   &kp GRAVE
&trans    &trans         &trans         &trans       &trans          &trans   &trans &trans    &trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp BSLH &trans
                                        &trans       &trans          &trans   &trans &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        bt_settings {
// ------------------------------------------------------------------------------------------------------------
// |       | BT1 | BT2 |  BT3 |  BT4 | BT5  |                   | BTCLR |       |       |      |       |TOG_BT|
// |       |     |     |      |      |      |                   |       |       |       |      |       |      |
// |       |     |     |      |      |      |                   |       |       |       |      |       |      |
// |       |     |     |      |      |      |        |  |       |       |       |       |      |       |      |
//                     |      |      |      |        |  |       |       |       |       |
            label = "Bluetooth";
            bindings = <
&trans  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4          &bt BT_CLR   &trans       &trans       &trans       &trans       &tog BT
&trans  &trans       &trans       &trans       &trans       &trans                &trans       &trans       &trans       &trans       &trans       &trans
&trans  &trans       &trans       &trans       &trans       &trans                &trans       &trans       &trans       &trans       &trans       &trans
&trans  &trans       &trans       &trans       &trans       &trans  &trans &trans &trans       &trans       &trans       &trans       &trans       &trans
                                  &trans       &trans       &trans  &trans &trans &trans       &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        extra_1 {
            status = "reserved";
        };

        extra_2 {
            status = "reserved";
        };

        extra_3 {
            status = "reserved";
        };
    };
};
